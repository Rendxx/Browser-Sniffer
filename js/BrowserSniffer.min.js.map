{"version":3,"sources":["BrowserSniffer.js"],"names":["_initBrowserSniffer","dataBrowser","dataOS","that","this","name","version","os","lan","versionSearchString","msie","Number","chrome","safari","firefox","edge","mobile","language","ZH","indexOf","EN","ES","FR","searchString","data","i","length","dataString","string","dataProp","prop","versionSearch","identity","subString","searchVersion","index","parseFloat","substring","navigator","userAgent","appVersion","browserLanguage","toLowerCase","vendor","window","opera","platform","$$","browser"],"mappings":"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","file":"BrowserSniffer.min.js","sourcesContent":["/************************************************ \nBrowser Sniffer\nCopyright (c) 2014-2015 Dongxu Ren  http://www.rendxx.com/\n\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\nVersion: 4.0\nUpdate: 2015-10-01\n   \nDescription:\n   Detect infomation of browser / browser-version / operation system / browser-language\n   \nCompatibility:\n    Chrome; Fire Fox; Safari; Edge; IE 9-11; IE 7,8;\n\nAPI:\n   $$.browser.name\n    - (string) Get browser name\n\n   $$.browser.version\n    - (string) Get browser version\n    \n   $$.browser.os\n    - (string) Get operation system name\n    \n   $$.browser.lan\n    - (string) Get browser language (in lower case)\n    \n   $$.browser.msie(version)\n    - (bool) Get whether the browser is IE (of special version if [version] is given).\n    - version including 7/8/9/10/11 \n    \n   $$.browser.edge()\n    - (bool) Get whether the browser is Edge.\n\n   $$.browser.chrome()\n    - (bool) Get whether the browser is Chrome.\n\n   $$.browser.safari()\n    - (bool) Get whether the browser is Safari.\n\n   $$.browser.firefox()\n    - (bool) Get whether the browser is Firefox.\n        \n   $$.browser.mobile()\n    - (bool) Get whether the browser is in a Mobile device.\n\n   $$.browser.language.[ZH/EN/ES/FR]()\n    - (bool) Get whether the browser language is Chinese/English/Spanish/French.\n\n************************************************/\n(function () {\n    var _initBrowserSniffer = function (dataBrowser, dataOS) {\n        var that = this;\n        this.name;\n        this.version;\n        this.os;\n        this.lan;\n\n        var versionSearchString;\n\n        this.msie = function (version) {\n            if (this.name == \"Explorer\") {\n                if (version == null) return true;\n                return (Number(this.version) == version);\n            }\n            return false;\n        };\n        this.chrome = function () {\n            return this.name == \"Chrome\";\n        };\n        this.safari = function () {\n            return this.name == \"Safari\";\n        };\n        this.firefox = function () {\n            return this.name == \"Firefox\";\n        };\n        this.edge = function () {\n            return this.name == \"Edge\";\n        };\n        this.mobile = function () {\n            return this.os == \"Android\" || this.os == \"iPhone/iPod\" || this.os == \"iPad\" || this.os == \"BlackBerry\" || this.os == \"Windows Phone\";\n        };\n\n        this.language = {\n            ZH: function () { return that.lan.indexOf(\"zh\") == 0; },\n            EN: function () { return that.lan.indexOf(\"en\") == 0; },\n            ES: function () { return that.lan.indexOf(\"es\") == 0; },\n            FR: function () { return that.lan.indexOf(\"fr\") == 0; }\n        };\n\n        var searchString = function (data) {\n            for (var i = 0; i < data.length; i++) {\n                var dataString = data[i].string;\n                var dataProp = data[i].prop;\n                versionSearchString = data[i].versionSearch || data[i].identity;\n                if (dataString) {\n                    if (dataString.indexOf(data[i].subString) != -1)\n                        return data[i].identity;\n                }\n                else if (dataProp)\n                    return data[i].identity;\n            }\n        };\n\n        var searchVersion = function (dataString) {\n            var index = dataString.indexOf(versionSearchString);\n            if (index == -1) return;\n            return parseFloat(dataString.substring(index + versionSearchString.length + 1));\n        };\n\n        var _init = function () {\n            that.name = searchString(dataBrowser) || \"Unknown browser\";\n            that.version = searchVersion(navigator.userAgent)\n                        || searchVersion(navigator.appVersion)\n                        || \"Unknown version\";\n            that.os = searchString(dataOS) || \"Unknown OS\";\n            that.lan = (navigator.language || navigator.browserLanguage).toLowerCase();\n        }();\n    };\n\n    // Browser parameter\n    var dataBrowser = [\n        {\n            string: navigator.userAgent,\n            subString: \"Trident\\/7\\.\",\n            versionSearch: \"rv\",\n            identity: \"Explorer\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"Edge\\/\",\n            identity: \"Edge\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"Chrome\",\n            identity: \"Chrome\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"OmniWeb\",\n            versionSearch: \"OmniWeb/\",\n            identity: \"OmniWeb\"\n        },\n        {\n            string: navigator.vendor,\n            subString: \"Apple\",\n            identity: \"Safari\",\n            versionSearch: \"Version\"\n        },\n        {\n            prop: window.opera,\n            identity: \"Opera\",\n            versionSearch: \"Version\"\n        },\n        {\n            string: navigator.vendor,\n            subString: \"iCab\",\n            identity: \"iCab\"\n        },\n        {\n            string: navigator.vendor,\n            subString: \"KDE\",\n            identity: \"Konqueror\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"Firefox\",\n            identity: \"Firefox\"\n        },\n        {\n            string: navigator.vendor,\n            subString: \"Camino\",\n            identity: \"Camino\"\n        },\n        {\t\t// for newer Netscapes (6+)\n            string: navigator.userAgent,\n            subString: \"Netscape\",\n            identity: \"Netscape\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"MSIE\",\n            identity: \"Explorer\",\n            versionSearch: \"MSIE\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"Gecko\",\n            identity: \"Mozilla\",\n            versionSearch: \"rv\"\n        },\n        { \t\t// for older Netscapes (4-)\n            string: navigator.userAgent,\n            subString: \"Mozilla\",\n            identity: \"Netscape\",\n            versionSearch: \"Mozilla\"\n        }\n    ];\n    var dataOS = [\n        {\n            string: navigator.userAgent,\n            subString: \"Android\",\n            identity: \"Android\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"webOS\",\n            identity: \"webOS\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"iPhone\",\n            identity: \"iPhone/iPod\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"iPad\",\n            identity: \"iPad\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"BlackBerry\",\n            identity: \"BlackBerry\"\n        },\n        {\n            string: navigator.userAgent,\n            subString: \"IEMobile\",\n            identity: \"Windows Phone\"\n        },\n        {\n            string: navigator.platform,\n            subString: \"Win\",\n            identity: \"Windows\"\n        },\n        {\n            string: navigator.platform,\n            subString: \"Mac\",\n            identity: \"Mac\"\n        },\n        {\n            string: navigator.platform,\n            subString: \"Linux\",\n            identity: \"Linux\"\n        }\n    ];\n\n    window.$$ = window.$$ || {};\n    window.$$.browser = new _initBrowserSniffer(dataBrowser, dataOS);\n})();\n"],"sourceRoot":"/source/"}