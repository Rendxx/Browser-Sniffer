{"version":3,"sources":["BrowserSniffer.js"],"names":["_initBrowserSniffer","dataBrowser","dataOS","that","this","name","version","os","lan","versionSearchString","msie","Number","chrome","safari","firefox","edge","opera","mobile","language","ZH","indexOf","EN","ES","FR","searchString","data","i","length","dataString","string","dataProp","prop","versionSearch","identity","subString","searchVersion","index","v","substring","match","navigator","userAgent","appVersion","browserLanguage","toLowerCase","vendor","window","platform","$$","browser"],"mappings":"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","file":"BrowserSniffer.min.js","sourcesContent":["/************************************************ \r\nBrowser Sniffer\r\nCopyright (c) 2014-2015 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 5.1\r\nUpdate: 2016-05-19\r\n   \r\nDescription:\r\n   Detect infomation of browser / browser-version / operation system / browser-language\r\n   \r\nCompatibility:\r\n    Chrome; Fire Fox; Safari; Opera; Edge; IE 9-11; IE 7,8;\r\n\r\nAPI:\r\n   $$.browser.name\r\n    - (string) Get browser name\r\n\r\n   $$.browser.version\r\n    - (string) Get browser version\r\n    \r\n   $$.browser.os\r\n    - (string) Get operation system name\r\n    \r\n   $$.browser.lan\r\n    - (string) Get browser language (in lower case)\r\n    \r\n   $$.browser.msie(version)\r\n    - (bool) Get whether the browser is IE (of special version if [version] is given).\r\n    - version including 7/8/9/10/11 \r\n    \r\n   $$.browser.edge()\r\n    - (bool) Get whether the browser is Edge.\r\n\r\n   $$.browser.chrome()\r\n    - (bool) Get whether the browser is Chrome.\r\n\r\n   $$.browser.safari()\r\n    - (bool) Get whether the browser is Safari.\r\n\r\n   $$.browser.firefox()\r\n    - (bool) Get whether the browser is Firefox.\r\n        \r\n   $$.browser.opera()\r\n    - (bool) Get whether the browser is Firefox.\r\n        \r\n   $$.browser.mobile()\r\n    - (bool) Get whether the browser is in a Mobile device.\r\n\r\n   $$.browser.language.[ZH/EN/ES/FR]()\r\n    - (bool) Get whether the browser language is Chinese/English/Spanish/French.\r\n\r\n************************************************/\r\n(function () {\r\n    \"use strict\";\r\n    var _initBrowserSniffer = function (dataBrowser, dataOS) {\r\n        var that = this;\r\n        this.name;\r\n        this.version;\r\n        this.os;\r\n        this.lan;\r\n\r\n        var versionSearchString;\r\n\r\n        this.msie = function (version) {\r\n            if (this.name === \"Explorer\") {\r\n                if (version == null) return true;\r\n                return (Number(this.version) === version);\r\n            }\r\n            return false;\r\n        };\r\n        this.chrome = function () {\r\n            return this.name === \"Chrome\";\r\n        };\r\n        this.safari = function () {\r\n            return this.name === \"Safari\";\r\n        };\r\n        this.firefox = function () {\r\n            return this.name === \"Firefox\";\r\n        };\r\n        this.edge = function () {\r\n            return this.name === \"Edge\";\r\n        };\r\n        this.opera = function () {\r\n            return this.name === \"Opera\";\r\n        };\r\n        this.mobile = function () {\r\n            return this.os === \"Android\" || this.os === \"iPhone/iPod\" || this.os === \"iPad\" || this.os === \"BlackBerry\" || this.os === \"Windows Phone\";\r\n        };\r\n\r\n        this.language = {\r\n            ZH: function () { return that.lan.indexOf(\"zh\") === 0; },\r\n            EN: function () { return that.lan.indexOf(\"en\") === 0; },\r\n            ES: function () { return that.lan.indexOf(\"es\") === 0; },\r\n            FR: function () { return that.lan.indexOf(\"fr\") === 0; }\r\n        };\r\n\r\n        var searchString = function (data) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                var dataString = data[i].string;\r\n                var dataProp = data[i].prop;\r\n                versionSearchString = data[i].versionSearch || data[i].identity;\r\n                if (dataString) {\r\n                    if (dataString.indexOf(data[i].subString) != -1)\r\n                        return data[i].identity;\r\n                }\r\n                else if (dataProp)\r\n                    return data[i].identity;\r\n            }\r\n        };\r\n\r\n        var searchVersion = function (dataString) {\r\n            var index = dataString.indexOf(versionSearchString);\r\n            if (index === -1) return;\r\n            var v = (dataString.substring(index + versionSearchString.length + 1)).match(/([\\d.]+)/);\r\n            if (v === null) return;\r\n            return v[1];\r\n        };\r\n\r\n        var _init = function () {\r\n            that.name = searchString(dataBrowser) || \"Unknown browser\";\r\n            that.version = searchVersion(navigator.userAgent)\r\n                        || searchVersion(navigator.appVersion)\r\n                        || \"Unknown version\";\r\n            that.os = searchString(dataOS) || \"Unknown OS\";\r\n            that.lan = (navigator.language || navigator.browserLanguage).toLowerCase();\r\n        }();\r\n    };\r\n\r\n    // Browser parameter\r\n    var dataBrowser = [\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"Trident\\/7\\.\",\r\n            versionSearch: \"rv\",\r\n            identity: \"Explorer\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"Edge\\/\",\r\n            identity: \"Edge\"\r\n        },\r\n        {       // for Opera\r\n            string: navigator.userAgent,\r\n            subString: \"OPR\",\r\n            identity: \"Opera\",\r\n            versionSearch: \"OPR\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"Chrome\",\r\n            identity: \"Chrome\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"OmniWeb\",\r\n            versionSearch: \"OmniWeb/\",\r\n            identity: \"OmniWeb\"\r\n        },\r\n        {\r\n            string: navigator.vendor,\r\n            subString: \"Apple\",\r\n            identity: \"Safari\",\r\n            versionSearch: \"Version\"\r\n        },\r\n        {       // for old Opera\r\n            prop: window.opera,\r\n            identity: \"Opera\",\r\n            versionSearch: \"Version\"\r\n        },\r\n        {\r\n            string: navigator.vendor,\r\n            subString: \"iCab\",\r\n            identity: \"iCab\"\r\n        },\r\n        {\r\n            string: navigator.vendor,\r\n            subString: \"KDE\",\r\n            identity: \"Konqueror\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"Firefox\",\r\n            identity: \"Firefox\"\r\n        },\r\n        {\r\n            string: navigator.vendor,\r\n            subString: \"Camino\",\r\n            identity: \"Camino\"\r\n        },\r\n        {\t\t// for newer Netscapes (6+)\r\n            string: navigator.userAgent,\r\n            subString: \"Netscape\",\r\n            identity: \"Netscape\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"MSIE\",\r\n            identity: \"Explorer\",\r\n            versionSearch: \"MSIE\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"Gecko\",\r\n            identity: \"Mozilla\",\r\n            versionSearch: \"rv\"\r\n        },\r\n        { \t\t// for older Netscapes (4-)\r\n            string: navigator.userAgent,\r\n            subString: \"Mozilla\",\r\n            identity: \"Netscape\",\r\n            versionSearch: \"Mozilla\"\r\n        }\r\n    ];\r\n    var dataOS = [\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"Android\",\r\n            identity: \"Android\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"webOS\",\r\n            identity: \"webOS\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"iPhone\",\r\n            identity: \"iPhone/iPod\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"iPad\",\r\n            identity: \"iPad\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"BlackBerry\",\r\n            identity: \"BlackBerry\"\r\n        },\r\n        {\r\n            string: navigator.userAgent,\r\n            subString: \"IEMobile\",\r\n            identity: \"Windows Phone\"\r\n        },\r\n        {\r\n            string: navigator.platform,\r\n            subString: \"Win\",\r\n            identity: \"Windows\"\r\n        },\r\n        {\r\n            string: navigator.platform,\r\n            subString: \"Mac\",\r\n            identity: \"Mac\"\r\n        },\r\n        {\r\n            string: navigator.platform,\r\n            subString: \"Linux\",\r\n            identity: \"Linux\"\r\n        }\r\n    ];\r\n\r\n    window.$$ = window.$$ || {};\r\n    window.$$.browser = new _initBrowserSniffer(dataBrowser, dataOS);\r\n})();\r\n"],"sourceRoot":"/source/"}